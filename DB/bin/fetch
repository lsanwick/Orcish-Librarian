#!/usr/bin/env ruby
# encoding: utf-8

require 'optparse'

options = { :log => $stderr, :env => 'dev', :append => false }
OptionParser.new do |opts|
  opts.banner = 'fetch [options] [SET]...'
  opts.on('-l', '--log [file]') {|f| s = open(f, 'w'); options[:log] = s; at_exit { s.close } }
  opts.on('-e', '--env [name]') {|e| options[:env] = e }
  opts.on('-a', '--append') { options[:append] = true }
end.parse!

require File.join(File.dirname(__FILE__), '../lib/bootstrap')
Orcish.env = options[:env]
Orcish.log = options[:log]
Orcish.debug("Using '#{Orcish.env}' environment")

collection = { }
manager = FetchManager.new
sets_to_process = (ARGV.length > 0) ? ARGV : manager.sets.keys
sets_to_process.each do |set|
  if manager.sets.keys.include?(set)    
    cards = manager.cards_for_set(set)
    collection[set] = cards
  else
    Orcish.debug("The set '#{set}' could not be found.")
  end
end

FileUtils.rm_rf("data/#{Orcish.env}.pstore") unless options[:append]
PStore.new("data/#{Orcish.env}.pstore").transaction do |store|
  collection.each_pair do |set, cards|
    store[set] = cards
  end
  store[:sets] = manager.sets
end